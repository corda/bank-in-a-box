apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.quasar-utils'

jar.archiveBaseName = "bank-in-a-box-workflows"

cordapp {
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    workflow {
        name "Refapp Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
    signing {
        enabled true
        options {
            keystore "../cert/signerStore.p12"
            alias "cordapp-signer"
            storepass "secret1!"
            keypass "secret1!"
            storetype "PKCS12"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

test {
    maxHeapSize = "4096m"
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntimeOnly
    integrationTestRuntime.exclude group: 'net.corda', module: 'workflows'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.squareup.okhttp3:okhttp:3.14.6"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile "com.github.tomakehurst:wiremock-jre8:2.27.0"

    // Corda dependencies.
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    cordapp "$confidential_id_release_group:ci-workflows:$confidential_id_release_version"
    cordapp "$accounts_release_group:accounts-workflows:$accounts_release_version"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    compileOnly "$corda_release_group:corda-node-driver:$corda_release_version"

    // CorDapp dependencies.
    cordapp project(":contracts")
    testCompile project(":credit-rating-oracle")
}


task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    maxParallelForks = Runtime.runtime.availableProcessors() / 2
    maxHeapSize = "4096m"
    jvmArgs("-Xms2g", "-XX:+UseParallelGC")
    useJUnitPlatform {
        includeEngines = ['junit-jupiter', 'junit-vintage']
        systemProperties = [
                'junit.jupiter.execution.parallel.enabled'             : 'true',
                'junit.jupiter.execution.parallel.mode.default'        : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default': 'concurrent',
        ]
    }
}